CREATE OR REPLACE DATABASE E_COMMERCE;
USE DATABASE E_COMMERCE;

CREATE OR REPLACE SCHEMA E_COMMERCE;


-- DIM_CUSTOMER
CREATE OR REPLACE TABLE DIM_CUSTOMER (
    CUSTOMER_ID VARCHAR PRIMARY KEY,
    CUSTOMER_NAME VARCHAR,
    CUSTOMER_REGION VARCHAR
);

-- DIM_PRODUCT
CREATE OR REPLACE TABLE DIM_PRODUCT (
    PRODUCT_ID VARCHAR PRIMARY KEY,
    PRODUCT_NAME VARCHAR,
    CATEGORY VARCHAR
);

-- DIM_DATE
CREATE OR REPLACE TABLE DIM_DATE (
    ORDER_DATE DATE PRIMARY KEY,
    DAY INT,
    MONTH INT,
    YEAR INT,
    WEEKDAY VARCHAR
);

-- FACT_ORDERS
CREATE OR REPLACE TABLE FACT_ORDERS (
    ORDER_ID VARCHAR PRIMARY KEY,
    ORDER_TIMESTAMP TIMESTAMP,
    CUSTOMER_ID VARCHAR REFERENCES DIM_CUSTOMER(CUSTOMER_ID),
    PRODUCT_ID VARCHAR REFERENCES DIM_PRODUCT(PRODUCT_ID),
    ORDER_DATE DATE REFERENCES DIM_DATE(ORDER_DATE),
    PRICE NUMBER,
    QUANTITY NUMBER,
    TOTAL_AMOUNT NUMBER
);


select * from fact_orders;

select * from dim_product;


-- minthly sales 

SELECT 
    d.YEAR,
    d.MONTH,
    p.CATEGORY,
    c.CUSTOMER_REGION,
    SUM(f.TOTAL_AMOUNT) AS TOTAL_SALES
FROM FACT_ORDERS f
JOIN DIM_DATE d ON f.ORDER_DATE = d.ORDER_DATE
JOIN DIM_PRODUCT p ON f.PRODUCT_ID = p.PRODUCT_ID
JOIN DIM_CUSTOMER c ON f.CUSTOMER_ID = c.CUSTOMER_ID
GROUP BY d.YEAR, d.MONTH, p.CATEGORY, c.CUSTOMER_REGION
ORDER BY d.YEAR, d.MONTH;


-- mosty repeated customer 
SELECT 
    f.CUSTOMER_ID,
    c.CUSTOMER_NAME,
    COUNT(*) AS ORDER_COUNT
FROM FACT_ORDERS f
JOIN DIM_CUSTOMER c ON f.CUSTOMER_ID = c.CUSTOMER_ID
WHERE f.ORDER_TIMESTAMP >= DATEADD(DAY, -30, CURRENT_TIMESTAMP)
GROUP BY f.CUSTOMER_ID, c.CUSTOMER_NAME
LIMIT 5;

-- qualntity sold 
SELECT 
    f.PRODUCT_ID,
    p.PRODUCT_NAME,
    SUM(f.QUANTITY) AS TOTAL_QUANTITY_SOLD,
    AVG(f.PRICE) AS AVERAGE_PRICE
FROM FACT_ORDERS f
JOIN DIM_PRODUCT p ON f.PRODUCT_ID = p.PRODUCT_ID
GROUP BY f.PRODUCT_ID, p.PRODUCT_NAME;

select * from dim_customer;

-- customer place order multip region
SELECT 
    c.CUSTOMER_ID,
    COUNT(DISTINCT CUSTOMER_REGION) AS REGION_COUNT
FROM FACT_ORDERS f
JOIN DIM_CUSTOMER c ON f.CUSTOMER_ID = c.CUSTOMER_ID
GROUP BY CUSTOMER_ID
HAVING REGION_COUNT > 1;


-- slowly changing dimensions can be handled using surrogate keys or tracking record of the CreateDate and UpdateDate in this way 
-- if any of the column is changed/updated we will have a version or a record of it at the time of creation 





